
import pandas as pd

# load dataset ربط ملف قاعدة البيانات 
data = pd.read_csv('diabetes_prediction_dataset.csv')
data.head()


data.info()


data['gender'] = data['gender'].astype('category')
data['gender_codes'] = data['gender'].cat.codes.astype('int')


data['smoking_history'].value_counts()

data['smoking_history'] = data['smoking_history'].map({'No Info': 0, 'never': 1,'former':2,'current':3,'not current':4,'ever':5})


data.info()


data['gender_codes'].value_counts()


data['diabetes'].value_counts()


from imblearn.over_sampling import RandomOverSampler
from sklearn.model_selection import train_test_split
data = data.drop('gender', axis=1)
data.isna().sum()

# Separate the features and labels
X = data.drop('diabetes', axis=1)
y = data['diabetes']
print(y)




from sklearn.ensemble import RandomForestClassifier 
from sklearn.linear_model import LogisticRegression

x_train, x_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
log_clf = LogisticRegression() 
rnd_clf = RandomForestClassifier() 
from sklearn.metrics import accuracy_score , f1_score


# Classification using Logistic Regression
log_clf.fit(x_train, y_train) # Train the model
y_pred = log_clf.predict(x_test)# Make Predictions 
# calculate the performance
acc_score=accuracy_score(y_test, y_pred)
f1 = f1_score(y_test, y_pred)
print(log_clf, "Accuracy Score:", acc_score, "F1-Score:", f1)



# Classification using Random Forest Classifier
rnd_clf.fit(x_train, y_train)# Train the model
y_pred = rnd_clf.predict(x_test)# Make Predictions 
# calculate the performance
acc_score=accuracy_score(y_test, y_pred)
f1 = f1_score(y_test, y_pred)
print(rnd_clf, "Accuracy Score:", acc_score, "F1-Score:", f1)



